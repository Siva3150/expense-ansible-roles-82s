
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: Install nodejs
    ansible.builtin.package:
     name: nodejs
     state: present
  
  - name: create expense user 
    ansible.builtin.user:
     name: expense

  - name: import tasks from common role 
    ansible.builtin.import_role:
     name: common 
     tasks_from: app-pre-req
  
  
  # - name: Extract the code
  #   ansible.builtin.unarchive:
  #    src: /tmp/backend.zip #by default ansible thinks this is in ansible server
  #    dest: /app 
  #    remote_src: yes

  - name: Install the dependencies
    ansible.builtin.command: npm install 
    args:
     chdir: /app

  - name: copy backend service
    ansible.builtin.template:
     src: backend.service.j2
     dest: /etc/systemd/system/backend.service 

  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9

  - name: Install mysql client
    ansible.builtin.package:
     name: mysql 
     state: present 

  - name: import mysql data
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      name: all
      state: import

  - name: daemon reload
    ansible.builtin.systemd_service:
     daemon_reload: true
     name: backend 
     state: restarted 
     
     